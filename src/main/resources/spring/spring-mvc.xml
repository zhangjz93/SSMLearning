<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <context:component-scan base-package="cn.zjz.controller" />
    <tx:annotation-driven transaction-manager="transactionManager" />
    <mvc:annotation-driven />

    <mvc:resources mapping="/statics/css/**" location="WEB-INF/statics/css/"></mvc:resources>
    <mvc:resources mapping="/statics/js/**" location="WEB-INF/statics/js/"></mvc:resources>

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!-- 视图解析器会在/WEB-INF/ftl/路径下扫描视图文件 -->
        <property name="templateLoaderPath" value="/WEB-INF/ftl/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean id="ftlResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="" />
        <property name="suffix" value=".ftl" />
        <property name="contentType" value="text/html;charset=UTF-8" />
    </bean>
    
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/test/**"/>
            <bean class="cn.zjz.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!--Spring aop事务管理
    <aop:config proxy-target-class="true">
        配置切入点    指定这个aop:pointcut去引用上面规定的advice，也就是说规定下面的这个expression指定的路径下的service.impl下的所有的方法，都按照上面advice中的规定去执行，碰上什么操作，事务就是什么类型的，这就是事务管理器的好处了
        解释一下，为什么这个要指定在service层：因为在同一个事务中，可能要对多张表进行多个不同的操作，才是一个完整的逻辑，例如淘宝上买东西，你转账之后你的钱减少了，对方的钱应该增加了，这两个操作在一起才是一个完整的操作，而如果这两个操作不在一个事务中，也就是如果将事务的操作指定在Dao层【MVC的设计模式：Dao层就是对数据库进行最简单的增删改查操作，而service层是进行逻辑处理的，一个完整的逻辑处理就要涉及到多次操作】事务操作失败，发生回滚，那你的帐减少了，对方的帐并没有增加，这样就不美丽的，因此，将事务的管理，指定在了service层
        <aop:pointcut id="transactionPointcut"
            expression="execution(* com.it.service..*Impl.*(..))" />expression中表达式所指意思： 所有的文件下的 com.it.service开头的包，以Impl结尾的类下的所有的方法，都执行上面advice的规定
        指定在txAdvice切入点应用txAdvice事务增强处理
        <aop:advisor pointcut-ref="transactionPointcut"
            advice-ref="transactionAdvice" />
    </aop:config> -->

</beans>